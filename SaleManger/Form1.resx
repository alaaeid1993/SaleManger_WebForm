<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RERERESk+v4/UeLE4EJgHZoAAAAASUVORK5CYII=
</value>
  </data>
</root>